{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["audio","window","AudioContext","scale","StyledSlider","withStyles","thumb","height","width","backgroundColor","boxShadow","border","&$focused, &:hover","concat","fade","&$activated","&$jumped","track","trackBefore","trackAfter","focused","activated","jumped","Slider","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setAmplitude","v","config","amplitude","setAttack","attack","setDecay","decay","setModRate","modFrequency","console","log","setTempo","tempo","setModAmount","modAmount","handleResize","setState","windowHeight","innerHeight","windowWidth","innerWidth","beep","freq","frequency","type","modType","state","rythm","createEmptyRythm","curBeat","isPlaying","showControls","undefined","timerId","attackRange","decayRange","amplitudeRange","modFrequencyRange","modAmountRange","tempoRange","_this2","setTimeout","playBeat","convertTempo","clearInterval","_this3","forEach","i","e","addEventListener","removeEventListener","col","row","myRythm","slice","_this4","that","classes","beeps","map","react_default","a","createElement","className","Math","ceil","key","cn","onClick","setBeat","AppBar_default","Toolbar_default","hidden","PlayArrowOutlined_default","startRythm","StopOutlined_default","stopRythm","SettingsOutlined_default","settingsToggle","ExpandLess_default","sliderWrap","App_SimpleSlider","name","init","handleChange","min","max","step","React","Component","SimpleSlider","value","_this5","event","index_es","onChange","gain","createGain","osc","createOscillator","maxGain","connect","destination","setValueAtTime","currentTime","linearRampToValueAtTime","start","gain2","osc2","stop","disconnect","numberBeats","numberNotes","arr","column","push","t","Typography","color","text","slider","padding","toolbarIcon","display","alignItems","justifyContent","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b14d629.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrowOutlined';\nimport StopIcon from '@material-ui/icons/StopOutlined';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\n\nimport SettingsIcon from '@material-ui/icons/SettingsOutlined';\nimport { Typography } from '@material-ui/core';\nimport Slider from '@material-ui/lab/Slider';\nimport List from '@material-ui/core/List';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\n// import MuiThemeProvider from '@material-ui/core/MuiThemeProvider';\n// import getMuiTheme from 'material-ui/lib/styles/getMuiTheme';\n\n\n\nconst audio = new window.AudioContext();\n\n\n\n\n/**\n * to do: \n *  - \n * \n * \n * \n */\n\n// pentatonic scale, from: http://www.angelfire.com/in2/yala/t4scales.htm\nconst scale = [\n  830.609,\n  739.989,\n  622.254,\n  554.365,\n  466.164,\n  415.305,\n  369.994,\n  311.127,\n  277.183,\n  233.082,\n  207.652,\n  184.997,\n  155.563,\n  138.591,\n];\n\n\nconst styles = {\n  Typography: {\n    color: 'orange',\n  },\n  text: {\n    color: 'orange',\n  },\n  sliderWrap: {\n    width: 300,\n  },\n  slider: {\n    padding: '22px 0px',\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    // ...theme.mixins.toolbar,\n  },\n};\n\n\nconst StyledSlider = withStyles({\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: '#000',\n    boxShadow: 'orange 0px 0px 11px 1px',\n    border: '1px solid #FFA500',\n    '&$focused, &:hover': {\n      boxShadow: `0px 0px 0px ${8}px ${fade('#FFA500', 0.16)}`,\n    },\n    '&$activated': {\n      boxShadow: `0px 0px 0px ${8 * 1.5}px ${fade('#FFA500', 0.16)}`,\n    },\n    '&$jumped': {\n      boxShadow: `0px 0px 0px ${8 * 1.5}px ${fade('#FFA500', 0.16)}`,\n    },\n  },\n  track: {\n    backgroundColor: '#FFA500',\n    height: 3,\n  },\n  trackBefore: {\n    boxShadow: 'orange -7px 0px 11px 1px',\n  },\n  trackAfter: {\n    backgroundColor: '#d0d7dc',\n  },\n  focused: {},\n  activated: {},\n  jumped: {},\n})(Slider);\n\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    \n\n    this.state = {\n      rythm : createEmptyRythm(16, 12),\n      curBeat: 0,\n      isPlaying : false,\n      amplitude : 50,\n      showControls: false,\n      windowHeight: undefined,\n      windowWidth: undefined,\n    };\n\n    \n    this.timerId = null;\n    // this.curBeat = 0;\n    // this.isPlayer = false;\n\n    this.config = {\n      attack: 10,\n      attackRange: [0,2000,10],\n      decay: 1100,\n      decayRange: [0,2000,10],\n      frequency: 440,\n      type: \"sine\",\n      amplitude: .5,\n      amplitudeRange: [0,.8,.01],\n      modType: \"sine\",\n      modFrequency: 22,\n      modFrequencyRange: [0,200,1],\n      modAmount: 7.2,\n      modAmountRange: [0,600,1],\n      tempo: 75,\n      tempoRange: [1, 300, 1],\n    };\n\n//init 50 157\n    \n  }\n\n\n\n  setAmplitude = (v) => {\n    this.config.amplitude = v;\n  };\n\n\n\n  setAttack = (v) => {\n    this.config.attack = v;\n  };\n\n  setDecay = (v) => {\n    this.config.decay = v;\n  };\n\n  setAmplitude = (v) => {\n    this.config.amplitude = v;\n  };\n\n  setModRate = (v) => {\n    this.config.modFrequency = (v * (.005*v)); // initial values grow slowly\n    console.log(v);\n  };\n\n  setTempo = (v) => {\n    this.config.tempo = v;\n    console.log(this.config.tempo);\n  };\n\n  setModAmount = (v) => {\n    this.config.modAmount = (v * (.001*v)); // initial values grow slowly\n    console.log(v);\n  };\n\n  startRythm(){\n    // this.timerId = setInterval(()=>{beep(),2000});\n    if(!this.state.isPlaying){\n      this.timerId = setTimeout(() => this.playBeat(), convertTempo(this.config.tempo));\n    }\n    this.setState({isPlaying:true});\n    \n\n  }\n\n\n\n  stopRythm(){\n    clearInterval(this.timerId);\n    // this.setState({isPlaying:false});\n    // this.curBeat = 0;\n    this.setState({\n      curBeat : 0,\n      isPlaying: false,\n    });\n  }\n\n  playBeat(){\n    // console.log(\"curbeat\");\n    // console.log(this.curBeat);\n    this.state.rythm[this.state.curBeat].forEach((i,e)=>{\n      if(i){\n        this.beep(scale[e]);\n      }\n    });\n    if(this.state.curBeat < 15){\n      let i = this.state.curBeat + 1;\n      this.setState({\n        curBeat: i,\n      });\n    }\n    else{\n      this.setState({\n        curBeat: 0,\n      });\n    }\n\n    this.timerId = setTimeout(() => this.playBeat(), convertTempo(this.config.tempo));\n    \n  }\n\n  handleResize = () => this.setState({\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth\n  });\n\n  /**\n   * Add event listener\n   */\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener('resize', this.handleResize)\n  }\n\n  /**\n   * Remove event listener\n   */\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  settingsToggle(){\n    this.setState({\n      showControls: !this.state.showControls,\n    })\n  }\n\n  setBeat(col, row){\n    let myRythm = this.state.rythm.slice();\n    myRythm[col][row] = !this.state.rythm[col][row];\n    this.setState({myRythm});\n  };\n\n  beep = (freq) => {\n    let config = {\n      attack: this.config.attack,\n      decay: this.config.decay,\n      frequency: freq,\n      type: \"sine\",\n      amplitude: this.config.amplitude,\n      modType: \"sine\",\n      modFrequency: this.config.modFrequency,\n      modAmount: this.config.modAmount\n    }\n\n    let b = new beep(config, config.frequency);\n    console.log(\"beeped\");\n\n  };\n\n  render(){\n    let that = this;\n\n    const { classes } = this.props;\n    //slider\n    // const { amplitude } = this.state.amplitude;\n\n    const beeps = this.state.rythm.map((col, i)=>{\n      \n      return (\n        <div className={(Math.ceil((i + 1)/4)%2===0) ? 'beep-col even' : 'beep-col odd'} key={i}>\n          {\n          col.map((row, e)=>{\n            let cn = (i === this.state.curBeat && this.state.isPlaying) ? 'active' : 'inactive';\n            cn += (this.state.rythm[i][e] ? ' on' : ' off')\n            return(\n              <div className={'beep'} \n                onClick={()=>that.setBeat(i,e)} \n                key={e}\n              >\n                <div className={'beep-inner ' + cn} />\n              </div>\n            );\n          })\n        }\n        </div>\n      )\n    });\n\n    \n    return (\n      \n      <div>\n        <AppBar className={'appbar'}>\n          <Toolbar className={'toolbar'} >\n          <div className=\"playstop\">\n            \n            <span hidden={this.state.isPlaying}>\n            <PlayArrowIcon \n              onClick={()=>{this.startRythm()}} \n              \n            />\n            </span>\n            <span hidden={!this.state.isPlaying}>\n              <StopIcon \n                onClick={()=>{this.stopRythm()}} \n                \n                hidden={!this.state.isPlaying}\n              />\n            </span>\n            <span hidden={this.state.showControls}>\n              <SettingsIcon \n                onClick={()=>{this.settingsToggle()}}\n                \n              />\n            </span>\n            <span hidden={!this.state.showControls}>\n              <ExpandLess\n                onClick={()=>{this.settingsToggle()}}\n                \n              />\n            </span>\n            \n          </div>\n          \n          {/* <span onClick={()=>{this.startRythm()}}>Play</span> */}\n          {/* <span onClick={()=>{this.stopRythm()}}>Stop</span> */}\n          </Toolbar>\n\n          <div className={'controls'} hidden={!this.state.showControls}>\n          <div className={classes.sliderWrap + ' slider'}>\n              <SimpleSlider \n                name={'amplitude'}\n                init={this.config.amplitude}\n                handleChange={this.setAmplitude} \n                min={0}\n                max={this.config.amplitudeRange[1]}\n                step={this.config.amplitudeRange[2]}\n              />\n\n            <SimpleSlider \n              name={'attack'}\n              init={this.config.attack}\n              handleChange={this.setAttack} \n              min={0}\n              max={this.config.attackRange[1]}\n              step={this.config.attackRange[2]}\n            />\n\n            <SimpleSlider \n              name={'decay'}\n              init={this.config.decay}\n              handleChange={this.setDecay} \n              min={0}\n              \n              max={this.config.decayRange[1]}\n              step={this.config.decayRange[2]}\n            />\n\n            <SimpleSlider \n              name={'modulation amount'}\n              init={131}\n              handleChange={this.setModAmount} \n              min={0}\n              max={this.config.modAmountRange[1]}\n              step={this.config.modAmountRange[2]}\n            />\n\n            <SimpleSlider \n              name={'modulation rate'}\n              init={50}\n              handleChange={this.setModRate} \n              min={0}\n              max={this.config.modFrequencyRange[1]}\n              step={this.config.modFrequencyRange[2]}\n            />\n\n            <SimpleSlider \n              name={'tempo'}\n              init={75}\n              handleChange={this.setTempo} \n              min={this.config.tempoRange[0]}\n              max={this.config.tempoRange[1]}\n              step={this.config.tempoRange[2]}\n            />\n          </div>\n        </div>\n\n        </AppBar>\n\n        \n\n\n        <main className={'main'}>\n          {beeps}\n        </main>\n        <p className={'ptest'}>\n          {this.state.windowWidth} x {this.state.windowHeight}\n        </p>\n        \n\n      </div>\n      \n    );\n  }\n    \n  \n}\n\nclass SimpleSlider extends React.Component{\n\n  state = {\n    value: this.props.init,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n    this.props.handleChange(value);\n  };\n\n  render() {\n    // const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n        <div>\n            <Typography>{this.props.name}: {value}</Typography>\n          <StyledSlider\n            className = {\"slider\"}\n            value={value}\n            min={this.props.min}\n            max={this.props.max}\n            step={this.props.step}\n            onChange={this.handleChange}\n          />\n        </div>\n      \n    );\n  }\n\n}\n\n\n\n\n\n/** \n * makes a beep sound\n * \n * config object has the following: \n * attack, decay, frequency, type\n * \n * @param {*} config - settings for this track\n * @param {*} freq - frequency adjustment for this beat\n */\nfunction beep(config, freq) {\n  var attack = config.attack,\n      decay = config.decay,\n      gain = audio.createGain(),\n      osc = audio.createOscillator(),\n      maxGain = config.amplitude,\n      modAmount  = config.modAmount;\n\n  gain.connect(audio.destination);\n  gain.gain.setValueAtTime(0, audio.currentTime);\n  gain.gain.linearRampToValueAtTime(maxGain, audio.currentTime + attack / 1000);\n  gain.gain.linearRampToValueAtTime(0, audio.currentTime + decay / 1000);\n\n  // console.log(\"config: \" + config.frequency + \", freq: \" + freq);\n  osc.frequency.value = config.frequency + freq;\n  osc.type = config.type;\n  osc.connect(gain);\n  osc.start(0);\n\n  if (config.modType !== 'none'){\n      var gain2 = audio.createGain();\n      gain2.gain.value = modAmount;\n      gain2.connect(osc.frequency);\n      var osc2 = audio.createOscillator();\n      osc2.type = config.modType;\n      osc2.frequency.value = config.modFrequency;\n      osc2.connect(gain2);\n      osc2.start(0);\n\n  }\n\n  setTimeout(function() {\n      osc.stop(0);\n      osc.disconnect(gain);\n      gain.disconnect(audio.destination);\n      if (config.modType !== 'none'){\n          osc2.stop(0);\n          gain2.disconnect(osc.frequency);\n      }\n  }, decay);\n}\n\n\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n/**\n * Creates an empty 2 dimensional array representing the rythm\n * In the UI, beats are the columns, notes the rows\n */\nfunction createEmptyRythm(numberBeats, numberNotes){\n  let arr = []\n  for(let i = 0; i < numberBeats; i++){\n    let column = [];\n    for(let e = 0; e < numberNotes; e++){\n      column.push(false);\n    }\n    arr.push(column);\n  }\n  return arr;\n}\n\nfunction calculateModFrequency(v){\n  return (v * (.001*v));\n}\nfunction calculateModAmount(v){\n  return (v * (.001*v));\n}\n\nfunction convertTempo(t){\n  return 15000/t;\n}\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<div><App /></div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}